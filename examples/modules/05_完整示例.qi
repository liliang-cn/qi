// 示例5: 完整的模块系统示例
// 综合展示包、导入、可见性、结构体和方法

包 完整示例;

// 导入标准库模块
导入 标准库.输入输出;
导入 标准库.数学;

// 公开结构体：产品信息
公开 结构体 产品 {
公开 整数 产品ID;
公开 字符串 产品名称;
公开 整数 价格;
整数 库存量;
}

// 公开结构体：订单
公开 结构体 订单 {
公开 整数 订单ID;
公开 整数 客户ID;
公开 整数 总金额;
}

// 私有结构：库存记录
结构体 库存记录 {
整数 产品ID;
整数 数量;
}

// 公开函数：创建产品
公开 函数 创建产品(id: 整数) : 产品 {
变量 新产品: 产品;
返回 新产品;
}

// 公开函数：创建订单
公开 函数 创建订单(id: 整数) : 订单 {
变量 新订单: 订单;
返回 新订单;
}

// 公开方法：获取产品价格
公开 函数 (自己 产品) 获取价格() : 整数 {
返回 0;
}

// 公开方法：更新库存
公开 函数 (变量 自己 产品) 更新库存(数量: 整数) : 布尔 {
返回 真;
}

// 私有函数：验证库存
函数 验证库存() : 布尔 {
返回 真;
}

// 私有函数：计算折扣
函数 计算折扣(原价: 整数, 折扣率: 整数) : 整数 {
返回 0;
}

// 私有函数：记录日志
函数 记录操作日志() {
返回;
}

// 私有方法：内部验证
函数 (自己 产品) 内部验证() : 布尔 {
返回 真;
}

// 公开函数：处理订单
公开 函数 处理订单() : 布尔 {
变量 库存验证 = 验证库存();

如果 库存验证 {
    记录操作日志();
    返回 真;
} 否则 {
    返回 假;
}
}

// 公开函数：计算订单总额
公开 函数 计算订单总额(单价: 整数, 折扣: 整数) : 整数 {
变量 最终价格 = 计算折扣(单价, 折扣);
返回 最终价格;
}

// 主程序入口
公开 函数 主程序() : 整数 {
变量 产品1 = 创建产品(1001);
变量 订单1 = 创建订单(2001);

变量 处理结果 = 处理订单();
变量 总额 = 计算订单总额(5000, 10);
变量 价格 = 产品1.获取价格();

如果 处理结果 {
    返回 0;
} 否则 {
    返回 1;
}
}
