// 语义错误测试用例 | Semantic Error Test Cases
// 这些程序包含各种语义错误，用于测试语义分析和错误消息 | These programs contain various semantic errors for testing semantic analysis and error messages

// 错误1: 未定义的变量使用 | Error 1: Use of undefined variable
变量 x = y + 5;  // y 未定义

// 错误2: 类型不匹配 | Error 2: Type mismatch
变量 a : 整数 = "hello";  // 字符串赋值给整数变量

// 错误3: 重复的变量声明 | Error 3: Duplicate variable declaration
变量 x = 10;
变量 x = 20;  // x 已经声明过

// 错误4: 函数调用参数数量不匹配 | Error 4: Function call parameter count mismatch
函数 add(a : 整数, b : 整数) : 整数 {
    返回 a + b;
}
变量 result = add(5);  // 缺少一个参数

// 错误5: 函数调用参数类型不匹配 | Error 5: Function call parameter type mismatch
变量 result = add(5, "hello");  // 第二个参数类型错误

// 错误6: 对非函数名进行函数调用 | Error 6: Function call on non-function
变量 x = 10;
变量 result = x();  // x 不是函数

// 错误7: 返回值类型不匹配 | Error 7: Return type mismatch
函数 test() : 整数 {
    返回 "hello";  // 返回字符串而不是整数
}

// 错误8: 在非函数上下文中使用返回语句 | Error 8: Return statement outside function
返回 42;  // 不在函数中

// 错误9: 对非数组类型进行数组访问 | Error 9: Array access on non-array type
变量 x = 10;
变量 y = x[0];  // x 不是数组

// 错误10: 数组索引类型错误 | Error 10: Array index type error
变量 arr = [1, 2, 3];
变量 y = arr["hello"];  // 索引应该是整数

// 错误11: 对非结构体类型进行字段访问 | Error 11: Field access on non-struct type
变量 x = 10;
变量 y = x.field;  // x 不是结构体

// 错误12: 访问不存在的结构体字段 | Error 12: Access to non-existent struct field
结构体 Person {
    name : 字符串,
    age : 整数,
}
变量 p : Person = Person { name: "Alice", age: 25 };
变量 y = p.height;  // height 字段不存在

// 错误13: 重新声明内置函数名 | Error 13: Redeclaration of built-in function name
函数 打印(message : 字符串) {  // 打印是内置函数
    // ...
}

// 错误14: 条件表达式不是布尔类型 | Error 14: Non-boolean condition in if statement
如果 42 {  // 条件应该是布尔类型
    打印 "always true?";
}

// 错误15: 循环条件不是布尔类型 | Error 15: Non-boolean condition in while loop
变量 i = 0;
当 i {  // 条件应该是布尔类型
    i = i + 1;
}

// 错误16: 对布尔值进行算术运算 | Error 16: Arithmetic operation on boolean values
变量 b : 布尔 = 真;
变量 result = b + 1;  // 不能对布尔值进行加法

// 错误17: 比较不兼容的类型 | Error 17: Comparison of incompatible types
变量 a = 10;
变量 b = "hello";
如果 (a == b) {  // 不能比较整数和字符串
    打印 "incomparable";
}

// 错误18: 变量作用域错误 | Error 18: Variable scope error
函数 test() {
    如果 (真) {
        变量 x = 10;
    }
    返回 x;  // x 超出作用域
}

// 错误19: 修改常量 | Error 19: Modification of constant
常量 PI = 3.14;
PI = 3.14159;  // 不能修改常量

// 错误20: 类型转换错误 | Error 20: Type conversion error
变量 s = "123";
变量 n : 整数 = s;  // 不能直接将字符串赋值给整数变量

// ===== 高级语义错误 | Advanced Semantic Errors =====

// 错误21: 函数返回类型不完整 | Error 21: Incomplete function return type
函数 不完整返回(x: 整数) -> 整数 {
    如果 (x > 0) {
        返回 x;
    }
    // 缺少其他分支的返回语句
}

// 错误22: 递归函数类型检查 | Error 22: Recursive function type checking
函数 递归类型错误(n: 浮点数) -> 整数 {
    如果 (n <= 1.0) {
        返回 1;  // 类型不匹配，应该是浮点数
    } 否则 {
        返回 n * 递归类型错误(n - 1);  // 混合了浮点数和整数运算
    }
}

// 错误23: 数组操作类型错误 | Error 23: Array operation type errors
变量 int_arr = [1, 2, 3, 4, 5];
变量 str_arr = ["a", "b", "c"];
变量 mixed_sum = int_arr + str_arr;  // 不同类型的数组不能相加

// 错误24: 字符串操作类型错误 | Error 24: String operation type errors
变量 str1 = "Hello";
变量 str2 = " World";
变量 invalid_concat = str1 * str2;  // 字符串不能相乘

// 错误25: 逻辑操作符类型错误 | Error 25: Logical operator type errors
变量 num1 = 5;
变量 num2 = 10;
变量 bad_logic = num1 且 num2;  // 整数不能用于逻辑操作

// 错误26: 位操作符类型错误 | Error 26: Bitwise operator type errors
变量 float_val = 3.14;
变量 bad_bitwise = float_val & 0xFF;  // 浮点数不能进行位操作

// 错误27: 函数参数遮蔽 | Error 27: Function parameter shadowing
函数 参数遮蔽(x: 整数) -> 整数 {
    变量 x = x + 1;  // 遮蔽了参数x
    返回 x;
}

// 错误28: 循环变量作用域错误 | Error 28: Loop variable scope error
对于 (i = 0; i < 10; i = i + 1) {
    // i 在循环外部不可访问
}
变量 invalid_access = i;  // i 超出作用域

// 错误29: 多重赋值语义错误 | Error 29: Multiple assignment semantic error
变量 a, b = 1, 2;  // 如果不支持多重赋值，这应该报错

// 错误30: 函数重载冲突 | Error 30: Function overloading conflict
函数 重载测试(x: 整数) -> 整数 {
    返回 x * 2;
}
函数 重载测试(x: 字符串) -> 字符串 {
    返回 x + " doubled";
}
变量 ambiguous_call = 重载测试(3.14);  // 类型不明确

// 错误31: 类型推断失败 | Error 31: Type inference failure
变量 unknown_type;  // 没有初始化值，无法推断类型
unknown_type = 42;

// 错误32: 泛型类型约束错误 | Error 32: Generic type constraint error
// 假设支持泛型
函数 泛型加法<T>(a: T, b: T) -> T {
    返回 a + b;  // 如果T不支持+操作，应该报错
}
变量 generic_error = 泛型加法("hello", 42);  // 类型不匹配

// 错误33: 接口实现缺失 | Error 33: Missing interface implementation
// 假设支持接口
接口 可比较 {
    函数 比较(other: 自身) -> 整数;
}
结构体 点 {
    x: 整数,
    y: 整数
}
// 结构体 点 没有实现 可比较 接口
变量 p1 = 点 { x: 1, y: 2 };
变量 p2 = 点 { x: 3, y: 4 };
// 如果调用 p1.比较(p2) 应该报错

// 错误34: 模块访问权限错误 | Error 34: Module access permission error
模块 私有模块 {
    私有变量 secret = 42;
    私有函数 私有函数() -> 整数 {
        返回 secret;
    }
}
变量 leaked_secret = 私有模块.secret;  // 访问私有变量

// 错误35: 死代码检测 | Error 35: Dead code detection
函数 死代码测试() -> 整数 {
    返回 42;
    打印 "这行永远不会执行";  // 死代码
    返回 100;  // 不可达代码
}

// 错误36: 未使用变量警告 | Error 36: Unused variable warning
变量 unused_var = 100;  // 声明但未使用的变量

// 错误37: 未使用函数参数警告 | Error 37: Unused function parameter warning
函数 未使用参数(x: 整数, y: 整数) -> 整数 {
    返回 x;  // 参数y未使用
}

// 错误38: 不可变变量修改 | Error 38: Immutable variable modification
// 假设变量默认不可变
变量 immutable_var = 10;
// immutable_var = 20;  // 不能修改不可变变量

// 错误39: 函数参数修改 | Error 39: Function parameter modification
函数 参数修改(param: 整数) -> 整数 {
    param = param + 1;  // 不能修改函数参数
    返回 param;
}

// 错误40: 类型别名冲突 | Error 40: Type alias conflict
类型 整数别名 = 整数;
类型 整数别名 = 字符串;  // 重复的类型别名定义

// 测试总结 | Test Summary
// 这个文件包含40个语义错误，覆盖了：
// - 基本类型检查和类型转换
// - 变量作用域和生命周期
// - 函数调用和返回类型检查
// - 数组和字符串操作类型检查
// - 操作符类型验证
// - 控制流语义检查
// - 高级类型系统特性（泛型、接口）
// - 模块和访问控制
// - 代码质量检查（死代码、未使用变量等）

// 主函数用于触发语义错误检查 | Main function to trigger semantic error checking
函数 main() -> 整数 {
    // 触发各种语义错误
    变量 trigger1 = y + 5;              // 错误1
    变量 trigger2: 整数 = "hello";       // 错误2
    变量 trigger3 = add(5);              // 错误4
    变量 trigger4 = add(5, "hello");     // 错误5
    变量 trigger5 = x();                 // 错误6

    如果 (42) {                          // 错误14
        打印 "non-boolean condition";
    }

    常量 PI = 3.14;
    PI = 3.14159;                       // 错误19

    返回 0;
}