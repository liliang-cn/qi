# Qi Language Compiler API Contract

openapi: 3.0.3
info:
  title: Qi Language Compiler API
  description: |
    API contract for the Qi language compiler, defining the CLI interface and
    programmatic API for compiling Qi source code to executable binaries.

    The Qi language compiler supports 100% Chinese keywords and generates
    executables for multiple platforms (Linux, Windows, macOS, WebAssembly).
  version: "1.0.0"
  contact:
    name: Qi Language Team
    email: team@qi-lang.org
  license:
    name: MIT

# CLI Command Interface Contract
components:
  schemas:
    CompileRequest:
      type: object
      required:
        - source_files
      properties:
        source_files:
          type: array
          items:
            type: string
          description: List of Qi source files (.qi extension)
        output_file:
          type: string
          description: Output executable file path
        target_platform:
          $ref: '#/components/schemas/TargetPlatform'
        optimization_level:
          $ref: '#/components/schemas/OptimizationLevel'
        debug_symbols:
          type: boolean
          default: false
          description: Include debug symbols in output
        runtime_checks:
          type: boolean
          default: true
          description: Enable runtime safety checks
        warnings_as_errors:
          type: boolean
          default: false
          description: Treat warnings as compilation errors
        import_paths:
          type: array
          items:
            type: string
          description: Additional import search paths
        config_file:
          type: string
          description: Path to compiler configuration file

    TargetPlatform:
      type: string
      enum:
        - linux
        - windows
        - macos
        - wasm
      default: linux
      description: Target compilation platform

    OptimizationLevel:
      type: string
      enum:
        - none
        - basic
        - standard
        - maximum
      default: basic
      description: Compilation optimization level

    CompilationResult:
      type: object
      required:
        - success
        - duration_ms
      properties:
        success:
          type: boolean
          description: Whether compilation succeeded
        output_file:
          type: string
          description: Path to generated executable
        duration_ms:
          type: integer
          format: int64
          description: Compilation duration in milliseconds
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/Diagnostic'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Diagnostic'
        statistics:
          $ref: '#/components/schemas/CompilationStatistics'

    Diagnostic:
      type: object
      required:
        - level
        - code
        - message
        - file_path
        - span
      properties:
        level:
          type: string
          enum:
            - error
            - warning
            - info
          description: Diagnostic severity level
        code:
          type: string
          description: Error/warning code
        message:
          type: string
          description: Chinese error message
        english_message:
          type: string
          description: English translation of error message
        file_path:
          type: string
          description: Source file path
        span:
          $ref: '#/components/schemas/SourceSpan'
        suggestion:
          type: string
          description: Suggested fix
        related_code:
          type: string
          description: Related source code snippet

    SourceSpan:
      type: object
      required:
        - start_line
        - start_column
        - end_line
        - end_column
      properties:
        start_line:
          type: integer
          description: Starting line number (1-based)
        start_column:
          type: integer
          description: Starting column number (1-based)
        end_line:
          type: integer
          description: Ending line number (1-based)
        end_column:
          type: integer
          description: Ending column number (1-based)
        byte_start:
          type: integer
          description: Starting byte offset
        byte_end:
          type: integer
          description: Ending byte offset

    CompilationStatistics:
      type: object
      properties:
        lines_of_code:
          type: integer
          description: Total lines of source code
        tokens_processed:
          type: integer
          description: Number of tokens processed
        ast_nodes_created:
          type: integer
          description: Number of AST nodes created
        memory_usage_mb:
          type: number
          format: float
          description: Peak memory usage during compilation
        functions_compiled:
          type: integer
          description: Number of functions compiled
        optimization_passes:
          type: array
          items:
            type: string
          description: Optimization passes applied

    VersionInfo:
      type: object
      required:
        - version
        - build_date
        - llvm_version
      properties:
        version:
          type: string
          description: Compiler version
        build_date:
          type: string
          format: date-time
          description: Build timestamp
        llvm_version:
          type: string
          description: LLVM version used
        git_commit:
          type: string
          description: Git commit hash
        target_platforms:
          type: array
          items:
            $ref: '#/components/schemas/TargetPlatform'
          description: Supported target platforms

    LanguageInfo:
      type: object
      required:
        - supported_keywords
        - supported_types
      properties:
        supported_keywords:
          type: array
          items:
            type: string
          description: List of supported Chinese keywords
        supported_types:
          type: array
          items:
            type: string
          description: List of supported data types
        file_extensions:
          type: array
          items:
            type: string
          description: Supported file extensions
        encoding:
          type: string
          default: UTF-8
          description: Supported source file encoding

# CLI Commands Contract
paths:
  /compile:
    post:
      summary: Compile Qi source files
      description: |
        Compiles one or more Qi source files into an executable binary.
        Supports multiple target platforms and optimization levels.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompileRequest'
      responses:
        '200':
          description: Compilation completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompilationResult'
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  details:
                    type: array
                    items:
                      type: string

  /version:
    get:
      summary: Get compiler version information
      description: Returns detailed version and build information
      responses:
        '200':
          description: Version information retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionInfo'

  /language:
    get:
      summary: Get language information
      description: Returns information about supported language features
      responses:
        '200':
          description: Language information retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LanguageInfo'

  /format:
    post:
      summary: Format Qi source code
      description: Formats Qi source code according to style guidelines
      requestBody:
        required: true
        content:
          text/plain:
            schema:
              type: string
      responses:
        '200':
          description: Code formatted successfully
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: Invalid source code
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  line:
                    type: integer
                  column:
                    type: integer

  /lint:
    post:
      summary: Analyze Qi source code
      description: Performs static analysis on Qi source code
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                source_files:
                  type: array
                  items:
                    type: string
                rules:
                  type: array
                  items:
                    type: string
                  description: Linting rules to apply
      responses:
        '200':
          description: Analysis completed
          content:
            application/json:
              schema:
                type: object
                properties:
                  issues:
                    type: array
                    items:
                      $ref: '#/components/schemas/Diagnostic'
                  statistics:
                    type: object
                    properties:
                      files_analyzed:
                        type: integer
                      issues_found:
                        type: integer

# CLI Usage Examples
tags:
  - name: CLI Commands
    description: Command-line interface operations

# Error Codes
definitions:
  ErrorCodes:
    type: object
    properties:
      E0001:
        description: 语法错误 - 无效的字符序列
        chinese: 语法错误 - 发现无效的字符序列
      E0002:
        description: 语法错误 - 缺少分号
        chinese: 语法错误 - 语句末尾缺少分号
      E0003:
        description: 语义错误 - 未声明的变量
        chinese: 语义错误 - 使用了未声明的变量
      E0004:
        description: 类型错误 - 类型不匹配
        chinese: 类型错误 - 表达式类型不匹配
      E0005:
        description: 编译错误 - 内存不足
        chinese: 编译错误 - 可用内存不足
      E0006:
        description: 文件错误 - 无法读取源文件
        chinese: 文件错误 - 无法读取源文件
      E0007:
        description: 链接错误 - 找不到函数定义
        chinese: 链接错误 - 找不到函数定义
      E0008:
        description: 目标错误 - 不支持的目标平台
        chinese: 目标错误 - 不支持的目标平台
      E0009:
        description: 配置错误 - 无效的配置选项
        chinese: 配置错误 - 无效的配置选项
      E0010:
        description: 运行时错误 - 无法生成可执行文件
        chinese: 运行时错误 - 无法生成可执行文件

# Usage Examples (in documentation)
examples:
  BasicCompilation:
    summary: Compile a simple Qi program
    description: |
      qi compile 你好.qi --output 你好 --target linux
  OptimizedCompilation:
    summary: Compile with maximum optimization
    description: |
      qi compile 程序.qi --optimization maximum --debug-symbols
  CrossCompilation:
    summary: Cross-compile for Windows
    description: |
      qi compile 程序.qi --target windows --output 程序.exe
  BatchCompilation:
    summary: Compile multiple files
    description: |
      qi compile 主程序.qi 工具函数.qi --output 应用程序
  ErrorChecking:
    summary: Check code without compilation
    description: |
      qi lint 源代码.qi --rules all