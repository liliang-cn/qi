// 类型转换综合测试
函数 主() {
    打印("=== 类型转换综合测试 ===");
    打印("");

    // 测试1: 数字格式化输出
    打印("测试1: 数字格式化输出");
    打印整数(42);
    打印整数(-100);
    打印整数(0);
    打印浮点数(3.14159);
    打印浮点数(-2.718);
    打印浮点数(0.0);
    打印("");

    // 测试2: 混合类型的计算
    打印("测试2: 混合类型计算");
    变量 整数结果 = 10 + 20 * 3;
    打印整数(整数结果);
    
    变量 浮点结果 = 3.14 * 2.0;
    打印浮点数(浮点结果);
    打印("");

    // 测试3: 数字与字符串组合输出
    打印("测试3: 数字与文本组合");
    打印("整数值: ");
    打印整数(999);
    打印("浮点值: ");
    打印浮点数(1.618);
    打印("");

    // 测试4: 批量数字输出
    打印("测试4: 批量输出");
    打印整数(1);
    打印整数(2);
    打印整数(3);
    打印整数(4);
    打印整数(5);
    打印("");

    // 测试5: 数学运算结果输出
    打印("测试5: 数学运算");
    变量 加法 = 100 + 200;
    打印整数(加法);
    
    变量 乘法 = 25 * 4;
    打印整数(乘法);
    
    变量 除法浮点 = 10.0 / 3.0;
    打印浮点数(除法浮点);
    打印("");

    // 测试6: 负数处理
    打印("测试6: 负数处理");
    变量 负整数 = -42;
    打印整数(负整数);
    
    变量 负浮点 = -3.14;
    打印浮点数(负浮点);
    打印("");

    // 测试7: 大数字
    打印("测试7: 大数字");
    打印整数(1000000);
    打印浮点数(9999999.99);
    打印("");

    打印("=== 类型转换测试完成 ===");
}
