包 主程序;

/*
 * Qi 语言类型系统完整演示
 * 
 * 本示例展示了以下功能：
 * 1. ✅ 结构体类型定义（带字段）
 * 2. ✅ 结构体实例化
 * 3. ✅ 字段访问
 * 4. ✅ 使用字段值
 * 5. ✅ 方法声明
 * 6. ✅ 方法调用
 */

// 定义类型（结构体）带属性
类型 点 {
    整数 横坐标;
    整数 纵坐标;
}

// 定义方法 - 显示坐标
函数 (自身 点) 显示() {
    打印("显示点的信息:");
    打印("横坐标:");
    打印整数(自身.横坐标);
    打印("纵坐标:");
    打印整数(自身.纵坐标);
}

// 定义方法 - 计算距离原点
函数 (自身 点) 距离() : 整数 {
    变量 横 = 自身.横坐标;
    变量 纵 = 自身.纵坐标;
    // 简化计算：|x| + |y| 作为曼哈顿距离
    变量 结果 = 横 + 纵;
    打印("距离原点的曼哈顿距离:");
    打印整数(结果);
    返回 结果;
}

// 定义方法 - 带参数的方法
函数 (自身 点) 偏移(横向: 整数, 纵向: 整数) {
    打印("偏移点");
}

// 定义普通函数接收参数
函数 显示坐标(横: 整数, 纵: 整数) {
    打印("横坐标:");
    打印整数(横);
    打印("纵坐标:");
    打印整数(纵);
}

// 测试函数 - 使用中文变量名
函数 测试中文变量() : 整数 {
    变量 甲 = 10;
    变量 乙 = 20;
    变量 和 = 甲 + 乙;
    返回 和;
}

// 入口函数
函数 入口() {
    打印("===类型系统完整演示===");
    
    // 1. 结构体实例化
    变量 点实例 = (点 { 横坐标: 10, 纵坐标: 20 });
    打印("✓ 结构体实例化成功");
    
    // 2. 字段访问
    变量 横值 = 点实例.横坐标;
    变量 纵值 = 点实例.纵坐标;
    打印("✓ 字段访问成功");
    
    // 3. 使用字段值调用函数
    显示坐标(横值, 纵值);
    打印("✓ 使用字段值成功");
    
    // 4. 方法调用
    点实例.显示();
    打印("✓ 方法调用成功");
    
    // 5. 测试带返回值的方法
    变量 距离值 = 点实例.距离();
    打印("✓ 方法返回值成功");
    
    // 6. 测试带参数的方法
    点实例.偏移(5, 10);
    打印("✓ 带参数方法成功");
    
    打印("===所有功能测试通过===");
}