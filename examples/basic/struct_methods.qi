// 结构体函数示例 - 参考Go语言的设计

// 定义一个点结构体
结构体 点 {
    x: 整数,
    y: 整数
}

// 为点定义函数 - 计算到原点的距离平方
函数 (self 点) 距离平方() : 整数 {
    返回 self.x * self.x + self.y * self.y;
}

// 可变接收者函数 - 移动点的位置
函数 (变量 self 点) 移动(dx: 整数, dy: 整数) {
    self.x = self.x + dx;
    self.y = self.y + dy;
}

// 定义矩形结构体
结构体 矩形 {
    width: 整数,
    height: 整数
}

// 为矩形定义函数 - 计算面积
函数 (self 矩形) 面积() : 整数 {
    返回 self.width * self.height;
}

// 为矩形定义函数 - 计算周长
函数 (self 矩形) 周长() : 整数 {
    返回 2 * (self.width + self.height);
}

// 定义圆形结构体
结构体 圆形 {
    center: 点,
    radius: 整数
}

// 为圆形定义函数
函数 (self 圆形) 直径() : 整数 {
    返回 self.radius * 2;
}

// 可变函数 - 改变半径
函数 (变量 self 圆形) 改变半径(new_radius: 整数) {
    self.radius = new_radius;
}

函数 main() {
    // 创建点实例
    变量 p: 点 = (点 { x: 3, y: 4 });
    打印 p.距离平方();  // 输出: 25
    
    // 调用可变函数
    p.移动(1, 1);
    打印 p.x;  // 输出: 4
    打印 p.y;  // 输出: 5
    
    // 创建矩形实例
    变量 rect: 矩形 = (矩形 {
        width: 10,
        height: 5
    });
    打印 rect.面积();   // 输出: 50
    打印 rect.周长();   // 输出: 30
    
    // 创建圆形实例
    变量 c: 圆形 = (圆形 {
        center: (点 { x: 0, y: 0 }),
        radius: 5
    });
    打印 c.直径();        // 输出: 10
    c.改变半径(10);
    打印 c.直径();        // 输出: 20
}
